services:

  zookeeper:
    image: bitnami/zookeeper:latest
    ports:
      - 2181:2181
    environment:
     - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: bitnami/kafka:latest
    ports:
      - 9092:9092
      - 9093:9093
    environment:
       - KAFKA_BROKER_ID=1
       - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
       - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
       - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
       - ALLOW_PLAINTEXT_LISTENER=yes
       - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT
       - KAFKA_CFG_LISTENERS=CLIENT://:9092
       - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092
       - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
       - KAFKA_CREATE_TOPICS= "faces:3:1"
    depends_on:
       - zookeeper
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions.sh", "--bootstrap-server", "kafka:9092"]
      interval: 10s
      timeout: 5s
      retries: 5

  db:
    container_name: db
    image: inferno681/pgvector
    restart: always
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=postgres

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "6831:6831/udp"
      - "16686:16686"

  redis:
    container_name: redis
    image: redis
    ports:
      - 6379:6379

  auth_service:
    image: inferno681/auth_service:latest
    volumes:
      - photo_storage:/app/photos
    depends_on:
      kafka:
        condition: service_healthy
      zookeeper:
        condition: service_started

  transaction_service:
    image: inferno681/transaction_service:latest
    depends_on:
      - auth_service

  face_verification_service:
    image: inferno681/face_verification_service:latest
    volumes:
      - photo_storage:/app/photos
  depends_on:
      - auth_service

  api_gateway:
    image: inferno681/api_gateway:latest
    ports:
      - "8000:8000"
    depends_on:
      - auth_service
      - transaction_service
      - face_verification_service

volumes:
  photo_storage:
